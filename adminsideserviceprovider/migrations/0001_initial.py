# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-07-13 06:38
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('adminsidecustomer', '0001_initial'),
        ('crmadmin', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractbasedHardwarewithMAC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('mac', models.CharField(blank=True, max_length=255)),
                ('sn', models.CharField(blank=True, max_length=255)),
                ('ver', models.CharField(blank=True, max_length=255)),
                ('usrn', models.CharField(blank=True, max_length=255)),
                ('passu', models.CharField(blank=True, max_length=255)),
                ('adusr', models.CharField(blank=True, max_length=255)),
                ('adpass', models.CharField(blank=True, max_length=255)),
                ('dslusr', models.CharField(blank=True, max_length=255)),
                ('dslpass', models.CharField(blank=True, max_length=255)),
                ('date_start', models.CharField(blank=True, max_length=255)),
                ('date_end', models.CharField(blank=True, max_length=255)),
                ('still_in_service', models.CharField(blank=True, max_length=255)),
                ('device_buy', models.CharField(blank=True, help_text='Enter Device Buy', max_length=255)),
                ('device_rental', models.CharField(blank=True, help_text='Enter Device Rental', max_length=255)),
                ('montly_rent', models.CharField(blank=True, help_text='Enter Montly rent', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerServiceContract',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customerwithservice', models.TextField(help_text='Enter customer service')),
                ('service_plan_hardware', models.TextField(help_text='Enter service plan h/w')),
                ('type', models.CharField(choices=[('Terminate', 'Terminate'), ('New', 'New'), ('Renew', 'Renew')], default='New', help_text='Enter Type', max_length=150)),
                ('contract_terms', models.TextField(blank=True, help_text='Enter contract terms')),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Complete', 'Complete'), ('Fail', 'Fail')], default='Pending', help_text='Enter active payment status', max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerTicketsCategoriesMap',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.TextField(help_text='Enter Subjects')),
                ('threads', models.TextField(help_text='Enter Threads')),
                ('category', models.CharField(choices=[('user', 'U'), ('administrator', 'A')], default='U', help_text='Enter Category', max_length=150)),
                ('priority', models.CharField(choices=[('low', 'L'), ('medium', 'M'), ('high', 'H')], default='L', help_text='Enter Status', max_length=150)),
                ('working_status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Complete', 'Complete')], default='Pending', help_text='Enter Working Status', max_length=150)),
                ('updatedetails', models.TextField(blank=True, help_text='Enter Update Details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerWithService',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('service_price_actual', models.FloatField(help_text='Enter Service Price')),
                ('service_price_retail', models.FloatField(help_text='Enter Service Price')),
                ('service_price_qty', models.FloatField(help_text='Enter Service Price')),
                ('plan_status', models.CharField(choices=[('active', 'Y'), ('inactive', 'N')], default='y', help_text='Enter active plan status', max_length=150)),
                ('plan_paid_status', models.CharField(choices=[('Monthly', 'Monthly'), ('One Time', 'One Time')], default='Monthly', help_text='Enter active plan paid status', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hw_title', models.CharField(help_text='Enter hardware Name', max_length=255)),
                ('type', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('mac', models.CharField(blank=True, max_length=255)),
                ('sn', models.CharField(blank=True, max_length=255)),
                ('ver', models.CharField(blank=True, max_length=255)),
                ('usrn', models.CharField(blank=True, max_length=255)),
                ('passu', models.CharField(blank=True, max_length=255)),
                ('adusr', models.CharField(blank=True, max_length=255)),
                ('adpass', models.CharField(blank=True, max_length=255)),
                ('dslusr', models.CharField(blank=True, max_length=255)),
                ('dslpass', models.CharField(blank=True, max_length=255)),
                ('date_start', models.CharField(blank=True, max_length=255)),
                ('date_end', models.CharField(blank=True, max_length=255)),
                ('still_in_service', models.CharField(blank=True, max_length=255)),
                ('device_buy', models.CharField(blank=True, help_text='Enter Device Buy', max_length=255)),
                ('device_rental', models.CharField(blank=True, help_text='Enter Device Rental', max_length=255)),
                ('montly_rent', models.CharField(blank=True, help_text='Enter Montly rent', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ManageServicePricedoc',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('service_price_doc_name', models.CharField(blank=True, help_text='Enter Service Price DOC Name', max_length=255)),
                ('service_price_doc', models.FileField(blank=True, upload_to='static/service_price_doc/')),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('delete', 'delete')], default='active', help_text='Enter Status', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServicePlanWithHardware',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hw_qty', models.CharField(help_text='Enter Service Provider Plan Quantity', max_length=255)),
                ('hw_status', models.CharField(choices=[('Buy', 'Buy'), ('Rental', 'Rental'), ('MonthlyRent', 'MonthlyRent')], default='Buy', help_text='Enter active hw status', max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hw', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.Hardware')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('service_provider_name', models.CharField(help_text='Enter Service Provider Name', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProviderCityMap',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.Country')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.Province')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProvider')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProviderPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Enter Service Provider Plan Name', max_length=255)),
                ('retail', models.CharField(help_text='Enter Service Provider Plan Retail Value', max_length=255)),
                ('actual', models.CharField(help_text='Enter Service Provider Plan Actual Value', max_length=255)),
                ('qty', models.CharField(help_text='Enter Service Provider Plan Quantity', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manage_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crmadmin.ManageServicePrice')),
                ('manage_service_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crmadmin.ManageServicesPriceCategory')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProvider')),
            ],
        ),
        migrations.CreateModel(
            name='TerminateContractDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_type', models.CharField(help_text='Enter contract_type', max_length=255)),
                ('contract_date', models.CharField(help_text='Enter contract_date', max_length=255)),
                ('zone', models.CharField(help_text='Enter zone', max_length=255)),
                ('monthly_charge', models.CharField(help_text='Enter monthly_charge', max_length=255)),
                ('outstanding_balance', models.CharField(help_text='Enter outstanding_balance', max_length=255)),
                ('cancellation_date', models.CharField(help_text='Enter cancellation_date', max_length=255)),
                ('cancellation_charge', models.CharField(help_text='Enter cancellation_charge', max_length=255)),
                ('admin_fee', models.CharField(help_text='Enter admin_fee', max_length=255)),
                ('additional_charge', models.CharField(help_text='Enter additional_charge', max_length=255)),
                ('comment', models.TextField(help_text='Enter comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customercontract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.CustomerServiceContract')),
            ],
        ),
        migrations.CreateModel(
            name='TicketsCategories',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_title', models.CharField(help_text='Enter Category', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TicketsCategoryWithServiceProvider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProvider')),
                ('ticket_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.TicketsCategories')),
            ],
        ),
        migrations.AddField(
            model_name='serviceplanwithhardware',
            name='service_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProviderPlan'),
        ),
        migrations.AddField(
            model_name='manageservicepricedoc',
            name='service_price_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProviderPlan'),
        ),
        migrations.AddField(
            model_name='customerwithservice',
            name='service_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProviderPlan'),
        ),
        migrations.AddField(
            model_name='customerwithservice',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='customerwithservice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsidecustomer.Customer'),
        ),
        migrations.AddField(
            model_name='customerticketscategoriesmap',
            name='service_plan_hardware',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServicePlanWithHardware'),
        ),
        migrations.AddField(
            model_name='customerticketscategoriesmap',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='customerticketscategoriesmap',
            name='ticketCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.TicketsCategories'),
        ),
        migrations.AddField(
            model_name='customerticketscategoriesmap',
            name='updatedby',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contractbasedhardwarewithmac',
            name='hw',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminsideserviceprovider.Hardware'),
        ),
    ]
